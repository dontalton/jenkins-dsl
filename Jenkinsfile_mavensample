#!groovy

def dockerImageName = env.JOB_NAME.substring(env.JOB_NAME.lastIndexOf('/') + 1)
def dockerRegistry = 'http://localhost:5000'
def dockerRepository = 'yourrepository'
def dockerCredentialsId = 'docker'

def dockerBuildSlaveImage = 'yourrepository/java-build-tools:latest'
def paramsForBuildSlave = '--net developmentstack_default -v /data/maven-repo:/data/maven-repo'
def additionalMavenParams = ['-Dmaven.repo.local=/data/maven-repo']
def _buildCommand = "mvn clean deploy"

node {
    stage('Checkout') {
        checkout scm
    }

    def dockerImageTag = sh(returnStdout: true, script: 'git describe --all').trim().replaceAll(/(.*\/)?(.+)/,'$2')
    def pushAsLatest = (dockerImageTag ==~ /v(\d+.\d+.\d+)/)

    stage('Env') {
        echo "*** Show env variables: ***" + \
             "\n dockerRegistry: " + dockerRegistry + \
             "\n dockerRepository: " + dockerRepository + \
             "\n dockerCredentialsId: " + dockerCredentialsId + \
             "\n dockerImageName: " + dockerImageName + \
             "\n dockerImageTag: " + dockerImageTag
    }

    docker.withRegistry(dockerRegistry, dockerCredentialsId) {

        stage('Maven build') {
            docker.image(dockerBuildSlaveImage).inside(paramsForBuildSlave) {

                for (param in additionalMavenParams) {
                    _buildCommand += " " + param
                }
                echo "*** Maven build:"
                sh (_buildCommand)
            }
        }

        stage('Docker Build & Push') {

            // Set repository and image name
            def image = docker.build dockerRepository + "/" + dockerImageName, "--build-arg TAG=${dockerImageTag} ."

            // Push actual tag
            image.push(dockerImageTag)

            // Push latest tag if it's a release
            if (pushAsLatest) {
                image.push('latest')
            }

            echo "*** Docker image successfully pushed to registry. ***"
        }
        def successMsg = "*** Tagged docker image as version " + dockerImageTag
        if (pushAsLatest) {
            successMsg = successMsg + " and also as \"latest\""
        }
        echo(successMsg)
    }
}
